% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggbody.R
\name{ggbody}
\alias{ggbody}
\title{Retrieve the body of a ggproto method as a list}
\usage{
ggbody(method, obj, inherit = FALSE)
}
\arguments{
\item{method}{The method name as a string. Alternatively an expression
that evaluates to the ggproto method in the form of \code{ggproto$method}.}

\item{obj}{The ggproto object asn an expression. Can be omitted if the method is an
expression in the form of \code{ggproto$method} that evalutes to the object's method.}

\item{inherit}{Whether the method should be returned from its closest parent.
Defaults to \code{FALSE}.}
}
\description{
Retrieve the body of a ggproto method as a list
}
\details{
For interactive uses, using the short form is recommended. For
programmatic uses, \code{as.list(body(get("method", ggproto)))} is recommended.

The \code{get("method", ggproto)} syntax is the long form of \code{ggproto$method} with
subtle but important differences;
\itemize{
\item For example, this works: \code{debugonce(get("compute_group", StatCount))}
\item But this fails to insert a break point: \code{debugonce(StatCount$compute_group)}
}
}
\examples{
\dontrun{
library(ggplot2)

# Methods can be specified in both long form and short form

longform <- ggbody("compute_group", StatCount)
longform

shortform <- ggbody(StatCount$compute_group)
shortform

identical(longform, shortform)

# Works for ggproto in extension packages

library(ggforce)
ggbody(StatBezier$compute_panel)

# `inherit = TRUE` will return the method from the closest parent

ggbody(StatBoxplot$compute_panel, inherit = TRUE)
ggbody(Stat$compute_panel)

}
}
