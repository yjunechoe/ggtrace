% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggbody.R
\name{ggbody}
\alias{ggbody}
\title{Retrieve the callstack of a ggproto method as a list}
\usage{
ggbody(method, obj)
}
\arguments{
\item{method}{The method name as a string. Alternatively an expression
that evaluates to the ggproto method in the form of \code{ggproto$method}.}

\item{obj}{The ggproto object. Can be omitted if the method is an expression
in the form of \code{ggproto$method} that evalutes to the ggproto object's method.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
Essentially calls \verb{as.list(body(get("<method>", <obj>)))} under the hood.
}
\note{
Despite the convenience of the short form which \code{ggbody()} also works with,
the long form of retrieving the ggproto method by specifying both the method and
the object separately exists for compatibility with other ways of inspecting
ggproto methods.

For example, this works: \code{debugonce(get("compute_group", StatCount))}.
But this fails to insert a break point: \code{debugonce(StatCount$compute_group)}
}
\examples{
\dontrun{
library(ggplot2)

longform <- ggbody("compute_group", StatCount)
longform

shortform <- ggbody(StatCount$compute_group)
shortform

identical(longform, shortform)

library(ggforce)
ggbody(StatBezier$compute_panel)
}
}
