% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/topic-tracing-context.R
\name{topic-tracing-context}
\alias{topic-tracing-context}
\title{Context-dependent workflow expressions in the tracing context}
\description{
Context-dependent workflow expressions in the tracing context
}
\section{Tracing context}{

When quoted expressions are passed to the \code{cond} or \code{value} argument of
workflow functions (in the form of \verb{ggtrace_\{action\}_\{value\}()}), they are
evaluated in a special environment (which we call the "tracing context").

The tracing context is "data-masked" (via \code{rlang::eval_tidy()}), exposing
an internal variable called \code{._counter_} which tracks how many times a
function/method has been called in the evaluation of a ggplot supplied to
the \code{x} argument of workflow functions. For example, \code{cond = quote(._counter_ == 1)}
is evaluated as \code{TRUE} when the method is called for the first time, and
this is the default value of \code{cond} for workflow functions that only return
one value (e.g., \code{ggtrace_capture_fn()}).

For highjack functions like \code{ggtrace_highjack_return()}, the value about to
be returned by the function/method can be accessed with \code{returnValue()} in the
\code{value} argument. By default, \code{value} is set to \code{quote(returnValue())} which
simply returns the return value, but directly computing on \code{returnValue()} to
derive a different return value for the function/method is also possible.
}

\keyword{internal}
