% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflows-capture.R
\name{ggtrace_capture_env}
\alias{ggtrace_capture_env}
\title{Capture a snapshot of a method's execution environment}
\usage{
ggtrace_capture_env(x, method, cond = quote(._counter_ == 1), at = -1L)
}
\arguments{
\item{x}{A ggplot object}

\item{method}{A function or a ggproto method.
The ggproto method may be specified using any of the following forms:
\itemize{
\item \code{ggproto$method}
\item \code{namespace::ggproto$method}
\item \code{namespace:::ggproto$method}
}}

\item{cond}{When the method should be captured and returned as function. Defaults to \code{TRUE}.
Given that only one value is returned by \code{ggtrace_capture_fn}, the default
value is the return value from the first time the method runs.}

\item{at}{Which step of the method body the environment should be captured. See \code{ggbody()}.}
}
\value{
An environment
}
\description{
Capture a snapshot of a method's execution environment
}
\examples{
library(ggplot2)

# Example from https://ggplot2.tidyverse.org/reference/aes_eval.html
after_scale_plot <- ggplot(mpg, aes(class, hwy)) +
  geom_boxplot(aes(colour = class, fill = after_scale(alpha(colour, 0.4))))
after_scale_plot

# `after_scale()` is resolved by `Geom$use_defaults` (at Step 6)

before_applying <- ggtrace_capture_env(
  x = after_scale_plot,
  method = Geom$use_defaults,
  at = 1  # To be more specific, do `at = 6`
)
after_applying <- ggtrace_capture_env(
  x = after_scale_plot,
  method = Geom$use_defaults,
  at = -1  # To be more specific, do `at = 7`
)

colnames(before_applying$data)
colnames(after_applying$data)

library(dplyr)

before_applying$data \%>\%
  select(any_of(c("colour", "fill")))
after_applying$data \%>\%
  select(any_of(c("colour", "fill")))

identical(
  before_applying$data \%>\%
    select(any_of(c("colour", "fill"))) \%>\%
    mutate(fill = alpha(colour, 0.4)),       #< after_scale() logic here
  after_applying$data \%>\%
    select(any_of(c("colour", "fill")))
)

}
