% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflows-inspect.R
\name{ggtrace_inspect_return}
\alias{ggtrace_inspect_return}
\title{Inspect the return value of a method}
\usage{
ggtrace_inspect_return(x, method, cond = quote(._counter_ == 1))
}
\arguments{
\item{x}{A ggplot object}

\item{method}{A function or a ggproto method.
The ggproto method may be specified using any of the following forms:
\itemize{
\item \code{ggproto$method}
\item \code{namespace::ggproto$method}
\item \code{namespace:::ggproto$method}
}}

\item{cond}{When the return value should be replaced. Defaults to \code{TRUE}.
Given that only one value is returned by \code{ggtrace_inspect_return}, the default
value is the return value from the first time the method runs.}
}
\value{
The return value from \code{method} when it is first called.
}
\description{
Inspect the return value of a method
}
\details{
The value to \code{cond} can be a quoted expression, which gets evaluated every
time the method is called during the evaluation of \code{x}. If \code{cond} evaluates to \code{TRUE}
multiple times (such as in the default case when \code{cond} is simply \code{TRUE}), the function
gives the return value from the first time the method runs.

The \code{cond} expression is evaluated inside the method's current execution environment, with
the addition of a data-masked variable \code{._counter_} (or \code{.data$._counter_}), which internally
tracks the current index of the method. For example, \code{._counter_ == 3} targets the third time
the method is called.

Additionally, when quoted and passed to \code{cond}, the function \code{returnValue()} accesses the
current return value of the method. For example, \code{unique(returnValue()$PANEL) == 2} for
\code{Stat$compute_group} targets the method when it's processing data for the second PANEL.
}
