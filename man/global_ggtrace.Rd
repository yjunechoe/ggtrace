% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tracedump.R
\name{global_ggtrace}
\alias{global_ggtrace}
\alias{set_global_ggtrace}
\alias{clear_global_ggtrace}
\alias{global_ggtrace_state}
\alias{global_ggtrace_on}
\alias{global_ggtrace_off}
\title{Retrieve all trace dump created by \code{ggtrace()}}
\usage{
global_ggtrace()

set_global_ggtrace(value)

clear_global_ggtrace()

global_ggtrace_state(state)

global_ggtrace_on()

global_ggtrace_off()
}
\arguments{
\item{state}{If missing, returns whether the global tracedump is currently active.
The global tracedump is inactive by default (\code{state} is \code{FALSE}). If activated,
every time a trace created by \code{ggtrace()} is triggered its tracedump is added
to the global tracedump storage, which can be inspected with \code{global_ggtrace()}.

The global tracedump can be turned on/off by setting \code{state} to \code{TRUE}/\code{FALSE}.}
}
\value{
List

A logical indicating the current state of the global trace dump.
If \code{state} is provided, changes the state first, then returns the state invisibly.
}
\description{
\code{global_ggtrace()} is a list of trace dumps collected across multiple traces, and is recommended
for use with \code{ggtrace(once = FALSE)} when you expect a trace to be independently triggered multiple
times (for example, when you are tracing a (compute/draw)_group method and there are multiple groups, or
when the plot has multiple layers which all call the method being traced).
}
\details{
\itemize{
\item \code{clear_global_ggtrace()} sets the value of \code{global_ggtrace()} to \code{NULL} and returns \code{NULL}.
\item You can inspect the state of the global trace dump with \code{global_ggtrace_state()} and activate or deactivate
it with \code{global_ggtrace_on()} and \code{global_ggtrace_off()}, which are aliases of \code{global_ggtrace_state(TRUE)}
and \code{global_ggtrace_state(FALSE)}, respectively.
}
}
\note{
When a trace dump is pushed to \code{global_ggtrace()}, it gets named after the ggproto method
and a hex code identifying the method's runtime environment, e.g. \code{"Stat$compute_layer-00000267437FD3D8"}.
}
\examples{
library(ggplot2)

global_ggtrace_state() # global tracedump is inactive by default since v0.4.3
global_ggtrace_on()    # alias for global_ggtrace_state(TRUE)
clear_global_ggtrace()

ggtrace(
  GeomBoxplot$draw_group,
  trace_steps = -1,
  once = FALSE,
  verbose = FALSE
)

ggplot(mpg, aes(class, hwy)) + geom_boxplot()

gguntrace(GeomBoxplot$draw_group)

boxplot_group_tracedump <- global_ggtrace()

length(boxplot_group_tracedump)

boxplot_group_tracedump <- unlist(
  boxplot_group_tracedump,
  recursive = FALSE,
  use.names = FALSE
)

patchwork::wrap_plots(boxplot_group_tracedump, nrow = 1)

clear_global_ggtrace()
global_ggtrace()

global_ggtrace_off() # alias for global_ggtrace_state(FALSE)

}
\seealso{
\code{\link[=last_ggtrace]{last_ggtrace()}}
}
\keyword{internal}
