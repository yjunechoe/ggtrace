% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_ggtrace.R
\name{with_ggtrace}
\alias{with_ggtrace}
\title{Isolate a ggtrace call for a single object}
\usage{
with_ggtrace(x, ...)
}
\arguments{
\item{x}{An object whose evaluation triggers the trace as specified by the \code{...}}

\item{...}{
  Arguments passed on to \code{\link[=ggtrace]{ggtrace}}
  \describe{
    \item{\code{trace_steps}}{A sorted numeric vector of positions in the method's body to trace. Negative indices
reference steps from the last, where \code{-1} references the last step in the body.}
    \item{\code{trace_exprs}}{A list of expressions to evaluate at each position specified
in \code{trace_steps}. If a single expression is provided, it is recycled to match the length of \code{trace_steps}.

To simply run a step and return its output, you can use the \code{~step} keyword. If the step
is an assign expression, the value of the assigned variable is returned.
If \code{trace_exprs} is not provided, \code{ggtrace()} is called with \code{~step} by default.}
    \item{\code{once}}{Whether to \code{untrace()} the method on exit. If \code{FALSE}, creates a persistent trace which is
active until \code{gguntrace()} is called on the method. Defaults to \code{TRUE}.}
    \item{\code{use_names}}{Whether the trace dump should use the names from \code{trace_exprs}. Defaults to \code{TRUE}.}
    \item{\code{print_output}}{Whether to \code{print()} the output of each expression to the console. Defaults to \code{TRUE}.}
    \item{\code{verbose}}{Whether logs should be printed when trace is triggered. Encompasses \code{print_output},
meaning that \code{verbose = FALSE} also triggers the effect of \code{print_output = FALSE} by consequence.
Defaults to \code{FALSE}.}
    \item{\code{method}}{A function or a ggproto method.
The ggproto method may be specified using any of the following forms:
\itemize{
\item \code{ggproto$method}
\item \code{namespace::ggproto$method}
\item \code{namespace:::ggproto$method}
}}
  }}
}
\value{
A list
}
\description{
\code{with_ggtrace()} provides a functional interface to \code{ggtrace()}. It takes an object
and parameters passed to \code{ggtrace()} and returns the immediate tracedump without side effects.
}
\examples{
library(ggplot2)

# Long-form `ggtrace()` method:
boxplot_plot <- ggplot(diamonds[1:500,], aes(cut, depth)) + geom_boxplot()
ggtrace(
 method = StatBoxplot$compute_group,
 trace_steps = -1, trace_exprs = quote(~step)
)
boxplot_plot
last_ggtrace()

# Short-form functional `with_ggtrace()` method:
my_tracedump <- with_ggtrace(
  x = boxplot_plot,
  method = StatBoxplot$compute_group,
  trace_steps = -1, trace_exprs = quote(~step)
)

identical(last_ggtrace(), my_tracedump)

}
