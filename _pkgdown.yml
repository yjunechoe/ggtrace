url: https://yjunechoe.github.io/ggtrace/

home:
  title: ggtrace
  description: A functional interface to ggplot2 internals

authors:
  June Choe:
    href: https://yjunechoe.github.io

template:
  bootstrap: 5
  bootswatch: flatly
  bslib:
    base_font: {google: "Atkinson Hyperlegible"}

reference:

- title: Sub-layer stages
  desc: >
    Take a snapshot of a layer's data in the sub-layer pipeline
  contents:
  - layer_before_stat
  - layer_after_stat
  - layer_before_geom
  - layer_after_scale

- title: Workflow functions
  desc: >
    These high-level functions take a ggplot object and a function or ggproto method,
    allowing interactions with the ggplot's build pipeline as it is evaluated. Functions
    grouped into three "workflows": Inspect, Capture, and Highjack.
  contents:
  - with_ggtrace

- subtitle: Inspect workflow
  desc: >
    Return values from or information about a method's execution state for inspection
  contents:
  - ggtrace_inspect_n
  - ggtrace_inspect_which
  - ggtrace_inspect_vars
  - ggtrace_inspect_args
  - ggtrace_inspect_return
  - ggtrace_inspect_on_error

- subtitle: Capture workflow
  desc: >
    Record a method's execution state, returning it as a function or environment
  contents:
  - ggtrace_capture_fn
  - ggtrace_capture_env

- subtitle: Highjack workflow
  desc: >
    Manipulate a method's behavior as it runs and return the modified graphical output
  contents:
  - ggtrace_highjack_args
  - ggtrace_highjack_return

- title: Contextualize errors at the layer and sub-layer level
  desc: >
    Return information about the (sub-)layer ggproto method that errors while rendering
  contents:
  - last_layer_errorcontext
  - last_sublayer_errorcontext

- title: Extending base::trace()
  desc: >
    The low-level function `ggtrace()` extends `base::trace()` by managing the **state** of
    injected expressions (traces), which allows for contiguity across multiple traces and
    the inspection of evaluated expressions logged to the tracedump, via `last_ggtrace()` and
    `global_ggtrace()`. Unlike the high-level workflow functions, `ggtrace()` relies on the
    "side effect" of functions and methods being traced, which can be restored with `gguntrace()`.

- subtitle: Trace
  desc: >
    Lower-level functions for finer control over injecting expressions with trace
  contents:
  - ggtrace
  - ggedit
  - gguntrace

- subtitle: Tracedumps
  desc: >
    Log and interact with the output of expressions injected with trace
  contents:
  - last_ggtrace
  - global_ggtrace

- title: Helpers
  desc: Helpers for working with ggtrace
  contents:
  - get_method
  - get_method_inheritance
  - ggbody
  - ggformals
  - is_traced

- title: Misc
  desc: Extending other debugging tools for use with ggplot internals
  contents:
  - ggdebug


articles:
- title: Usage
  navbar: Usage
  contents:
  - examples-gallery
  - workflow-functions
- title: Design
  navbar: Design
  contents:
  - pedagogical-philosophy
  - extending-trace
  - FAQ

navbar:
  structure:
    left: [paper, reference, news, articles]
    right: [search, github]
  components:
    paper:
      text: Paper
      href: https://yjunechoe.github.io/static/papers/Choe_2022_SublayerGG.pdf

figures:
  dev: ragg::agg_png
  dpi: 150
  dev.args: []
  fig.ext: png
  fig.height: ~
  fig.retina: 2
  bg: "white"
